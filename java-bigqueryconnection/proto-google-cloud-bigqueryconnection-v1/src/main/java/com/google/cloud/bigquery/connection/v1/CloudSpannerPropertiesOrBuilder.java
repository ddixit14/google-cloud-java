/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/connection/v1/connection.proto

package com.google.cloud.bigquery.connection.v1;

public interface CloudSpannerPropertiesOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.connection.v1.CloudSpannerProperties)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Cloud Spanner database in the form `project/instance/database'
   * </pre>
   *
   * <code>string database = 1;</code>
   *
   * @return The database.
   */
  java.lang.String getDatabase();
  /**
   *
   *
   * <pre>
   * Cloud Spanner database in the form `project/instance/database'
   * </pre>
   *
   * <code>string database = 1;</code>
   *
   * @return The bytes for database.
   */
  com.google.protobuf.ByteString getDatabaseBytes();

  /**
   *
   *
   * <pre>
   * If parallelism should be used when reading from Cloud Spanner
   * </pre>
   *
   * <code>bool use_parallelism = 2;</code>
   *
   * @return The useParallelism.
   */
  boolean getUseParallelism();

  /**
   *
   *
   * <pre>
   * If the serverless analytics service should be used to read data from Cloud
   * Spanner.
   * Note: `use_parallelism` must be set when using serverless analytics.
   * </pre>
   *
   * <code>bool use_serverless_analytics = 3;</code>
   *
   * @return The useServerlessAnalytics.
   */
  boolean getUseServerlessAnalytics();

  /**
   *
   *
   * <pre>
   * Optional. Cloud Spanner database role for fine-grained access control.
   * A database role is a collection of fine-grained access privileges. Example:
   * Admin predefines roles that provides user a set of permissions (SELECT,
   * INSERT, ..). The user can then specify a predefined role on a connection to
   * execute their Cloud Spanner query. The role is passthrough here. If the
   * user is not authorized to use the specified role, they get an error. This
   * validation happens on Cloud Spanner.
   *
   * See https://cloud.google.com/spanner/docs/fgac-about for more details.
   *
   * REQUIRES: database role name must start with uppercase/lowercase letter
   * and only contain uppercase/lowercase letters, numbers, and underscores.
   * </pre>
   *
   * <code>string database_role = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The databaseRole.
   */
  java.lang.String getDatabaseRole();
  /**
   *
   *
   * <pre>
   * Optional. Cloud Spanner database role for fine-grained access control.
   * A database role is a collection of fine-grained access privileges. Example:
   * Admin predefines roles that provides user a set of permissions (SELECT,
   * INSERT, ..). The user can then specify a predefined role on a connection to
   * execute their Cloud Spanner query. The role is passthrough here. If the
   * user is not authorized to use the specified role, they get an error. This
   * validation happens on Cloud Spanner.
   *
   * See https://cloud.google.com/spanner/docs/fgac-about for more details.
   *
   * REQUIRES: database role name must start with uppercase/lowercase letter
   * and only contain uppercase/lowercase letters, numbers, and underscores.
   * </pre>
   *
   * <code>string database_role = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for databaseRole.
   */
  com.google.protobuf.ByteString getDatabaseRoleBytes();
}
